openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/token/account/:
    get:
      operationId: retrieveUser
      description: manage the authenticated user
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: manage the authenticated user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: manage the authenticated user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/blob/image/:
    get:
      operationId: listBlobImages
      description: viewset for images in blob storage
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BlobImage'
          description: ''
      tags:
      - api
    post:
      operationId: createBlobImage
      description: viewset for images in blob storage
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlobImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlobImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlobImage'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobImage'
          description: ''
      tags:
      - api
  /api/blob/image/{id}/:
    get:
      operationId: retrieveBlobImage
      description: viewset for images in blob storage
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this BlobImage.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobImage'
          description: ''
      tags:
      - api
    put:
      operationId: updateBlobImage
      description: viewset for images in blob storage
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this BlobImage.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlobImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlobImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlobImage'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobImage'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBlobImage
      description: viewset for images in blob storage
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this BlobImage.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlobImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlobImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlobImage'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobImage'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBlobImage
      description: viewset for images in blob storage
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this BlobImage.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/blob/file/:
    get:
      operationId: listBlobFiles
      description: viewset for files in blob storage
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BlobFile'
          description: ''
      tags:
      - api
    post:
      operationId: createBlobFile
      description: viewset for files in blob storage
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlobFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlobFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlobFile'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobFile'
          description: ''
      tags:
      - api
  /api/blob/file/{id}/:
    get:
      operationId: retrieveBlobFile
      description: viewset for files in blob storage
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this BlobFile.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobFile'
          description: ''
      tags:
      - api
    put:
      operationId: updateBlobFile
      description: viewset for files in blob storage
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this BlobFile.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlobFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlobFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlobFile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobFile'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBlobFile
      description: viewset for files in blob storage
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this BlobFile.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlobFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlobFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlobFile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobFile'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBlobFile
      description: viewset for files in blob storage
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this BlobFile.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/token/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/token/create/:
    post:
      operationId: createUser
      description: create a new user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
  /api/token/verify/:
    post:
      operationId: createTokenVerify
      description: 'Takes a token and indicates if it is valid.  This view provides
        no

        information about a token''s fitness for a particular use.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
      tags:
      - api
components:
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
          minLength: 5
      required:
      - name
      - email
      - password
    BlobImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 250
        description:
          type: string
          nullable: true
        image:
          type: string
          format: binary
          nullable: true
      required:
      - name
    BlobFile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 250
        description:
          type: string
          nullable: true
        file:
          type: string
          format: binary
          nullable: true
      required:
      - name
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
      required:
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
      required:
      - token
